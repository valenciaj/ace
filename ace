#!/usr/bin/perl

use warnings;
use strict;

my ($file, $fh);

# iterate files
for $file (@ARGV) {

  open $fh, "<", $file;

  # iterate lines
  while (<$fh>) {
    chomp;
    # printf "%5i %s\n", $., $_;
    # Sections: [example]
    if (m/^\s*\[\S+\]\s*$/) {
      print "\033[31m", $_, "\033[0m", "\n";
    }
    # Comments: ; bla bla bla ...
    elsif (m/^\s*;/) {
      print "\033[90m", $_, "\033[0m", "\n";
    }
    # Dialplan: exten => 100,1,NoOp(Hello world !!!)
    elsif (m/^(\s*exten)(\s*=>\s*)([^,]*)(,)([0-9]+)(,)([^\(]+)(.*)/) {
      # print $_, "\n";
      $_ =  "\033[36m". $1 .
            "\033[0m". $2 .
            "\033[1;36m". $3 .
            "\033[0m". $4 .
            "\033[36m". $5 .
            "\033[0m". $6 .
            "\033[36m". $7 .
            "\033[0m". $8 .
            "\033[0m";
      s/(ARRAY|HASH|[\(\)]|,)/\033[1;35m$1\033[0m/ig;
      s/(\$\{)([^\}]+)(\})/\033[2;36m$1\033[0m$2\033[2;36m$3\033[0m/g;
      s/(\$\[)([^\]]+)(\])/\033[2;36m$1\033[0m$2\033[2;36m$3\033[0m/g;
      print $_, "\n";
    }
    # Dialplan: same => n,NoOp(Hello world !!!)
    elsif (m/^(\s*same)(\s*=>\s*)(n)(,)([^\(]+)(.*)/) {
      # print $_, "\n";
      $_ =  "\033[36m". $1 .
            "\033[0m". $2 .
            "\033[1;36m". $3 .
            "\033[0m". $4 .
            "\033[36m". $5 .
            "\033[0m". $6 .
            "\033[0m";
      s/(ARRAY|HASH|[\(\)]|\,)/\033[1;35m$1\033[0m/ig;
      s/(\$\{)([^\}]+)(\})/\033[2;36m$1\033[0m$2\033[2;36m$3\033[0m/g;
      s/(\$\[)([^\]]+)(\])/\033[2;36m$1\033[0m$2\033[2;36m$3\033[0m/g;
      print $_, "\n";
    }
    # Key and values: key=value
    elsif (m/(\S+)(\s*=>?\s*)(\S+)(\s*;.*)*/) {
      print "\033[33m", $1,
            "\033[34m", $2,
            "\033[35m", $3,
            "\033[90m", $4 || "",
            "\033[0m", "\n";
    }
    # Includes: #include
    # Execs: #exec
    elsif (m/^(\s*#\s*include|exec\s+)(.*)/) {
      print "\033[32m", $1, "\033[1;32m", $2, "\033[0m", "\n";
    }
    # Other
    else {
      print $_, "\n";
    }
  }

  close $fh;
}
